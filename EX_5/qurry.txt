q1- Use of union all operation findind employee who has age between 30 to 35 and  40 to 50 
q2 - Use of intersection all to find all employee who are from ranchi and age > 30
q3 - Use of except all 
q4 - show employee name where name is not null 
q5 - List details of eployee who's age is null or city  is NULL
q6 - List all tuples who have null in any tupple 
q7 - Perform not operation 
q8 - find average of salary 
q9 - find avg of salary without null 
q10 - find name of employee who earns maximum salary
q11 - Calculate total of salary 
q12 - Get name of employee who work in some organisation using exists 
q13 - count no of tuples incluing null
q14 - count no of tuples excluding null
q15 - use of min : aggrigate 
## Aggrigate function with condition 
q16 - use of as clause with aggrigate function 
q17 - use of where caluse with aggrigate function 
q18 - Use of COUNT(DISTINCT) with WHERE clause
q19 - Use of COUNT with column and WHERE clause
q20 - 
q21 - Use of GROUP BY with AVG and AS alias
q22 - Use of HAVING clause with aggregate function
q22- 
q23 - 
q24 - 
## sub querry 
q26 - Use of subquery in FROM clause with AS alias
q27 - Use of subquery with MIN in WHERE clause
q28 - Use of subquery with AVG in WHERE clause
q29 - Use of scalar subquery in SELECT clause
## set membership 
q30 - Use of nested IN subqueries with OR
q31 - use of not in  with nested subqueries 
q32 - use of not in with literal values
q33 - Use of row constructor with IN subquery
q34 - Use of self-join with table aliases
q35 - Use of self-join returning single column
q36 - Use of SOME comparison operator
q37 - Use of self-join with specific condition
q38 - Use of ALL comparison operator
q39 - Use of ALL with subquery 
q40 - Use of ALL with subquery  with where clause 
q41 - 
q42 - Use of EXISTS with correlated subquery 
q43 - Use of EXISTS with temp table 
q44 - Use of NOT EXISTS with condition
q45 - Use of NOT EXISTS with comparison
q46 - Use of subquery with COUNT(*) in WHERE
q47 - Use of subquery with COUNT(company name ) in WHERE
q48 - Use of temp  table in from  with aggregate function 
q49 - 
q51 - use of with to get who pay above average total salary 
q52 - Use of correlated subquery in SELECT
q53 - Use of multiple scalar subqueries in expression
q54 - Use of scalar subqueries in arithmetic operation
q55 -
q56 - 

q59 - Use of INSERT with VALUES clause
q60 - Use of INSERT with column list
q61 - Use of INSERT with SELECT subquery

q63 - Use of UPDATE without WHERE clause
q64 - Use of UPDATE with WHERE condition
q65 - Use of UPDATE with aggregate subquery
q68 - Use of UPDATE with CASE statement